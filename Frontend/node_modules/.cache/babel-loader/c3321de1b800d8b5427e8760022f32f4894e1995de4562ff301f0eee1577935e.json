{"ast":null,"code":"export const getAIMessage = async userQuery => {\n  try {\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userQuery\n      })\n    });\n    const data = await res.json();\n    return {\n      role: \"assistant\",\n      content: data.response\n    };\n  } catch (error) {\n    console.error(\"Error fetching AI message:\", error);\n    return {\n      role: \"assistant\",\n      content: \"⚠️ Something went wrong while contacting the assistant.\"\n    };\n  }\n};","map":{"version":3,"names":["getAIMessage","userQuery","res","fetch","method","headers","body","JSON","stringify","message","data","json","role","content","response","error","console"],"sources":["/Users/prasanna/Documents/Instalily/Main Project/case-study/src/api/api.js"],"sourcesContent":["export const getAIMessage = async (userQuery) => {\n  try {\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ message: userQuery }),\n    });\n\n    const data = await res.json();\n\n    return {\n      role: \"assistant\",\n      content: data.response,\n    };\n  } catch (error) {\n    console.error(\"Error fetching AI message:\", error);\n    return {\n      role: \"assistant\",\n      content: \"⚠️ Something went wrong while contacting the assistant.\",\n    };\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAER;MAAU,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAE7B,OAAO;MACLC,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO;MACLH,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}