{"ast":null,"code":"export const getAIMessage = async (userQuery, history) => {\n  try {\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userQuery,\n        history: history\n      })\n    });\n    const data = await res.json();\n    return {\n      role: \"assistant\",\n      content: data.response\n    };\n  } catch (error) {\n    return {\n      role: \"assistant\",\n      content: \"⚠️ Something went wrong contacting the assistant.\"\n    };\n  }\n};\nexport const getAIMessageStream = async (input, history, onChunk) => {\n  const res = await fetch(\"http://localhost:8000/chat\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      message: input,\n      history\n    })\n  });\n  const reader = res.body.getReader();\n  const decoder = new TextDecoder(\"utf-8\");\n  let content = \"\";\n  while (true) {\n    const {\n      done,\n      value\n    } = await reader.read();\n    if (done) break;\n    const chunk = decoder.decode(value);\n    content += chunk;\n    onChunk(content); // update UI as we go\n  }\n  return {\n    role: \"assistant\",\n    content\n  };\n};","map":{"version":3,"names":["getAIMessage","userQuery","history","res","fetch","method","headers","body","JSON","stringify","message","data","json","role","content","response","error","getAIMessageStream","input","onChunk","reader","getReader","decoder","TextDecoder","done","value","read","chunk","decode"],"sources":["/Users/prasanna/Documents/Instalily/on github/Instalily_Project/Frontend/src/api/api.js"],"sourcesContent":["export const getAIMessage = async (userQuery, history) => {\n  try {\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: userQuery,\n        history: history,\n      }),\n    });\n\n    const data = await res.json();\n    return {\n      role: \"assistant\",\n      content: data.response,\n    };\n  } catch (error) {\n    return {\n      role: \"assistant\",\n      content: \"⚠️ Something went wrong contacting the assistant.\",\n    };\n  }\n};\nexport const getAIMessageStream = async (input, history, onChunk) => {\n  const res = await fetch(\"http://localhost:8000/chat\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ message: input, history }),\n  });\n\n  const reader = res.body.getReader();\n  const decoder = new TextDecoder(\"utf-8\");\n  let content = \"\";\n\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) break;\n    const chunk = decoder.decode(value);\n    content += chunk;\n    onChunk(content);  // update UI as we go\n  }\n\n  return { role: \"assistant\", content };\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;EACxD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAET,SAAS;QAClBC,OAAO,EAAEA;MACX,CAAC;IACH,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC7B,OAAO;MACLC,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MACLH,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC;AACD,OAAO,MAAMG,kBAAkB,GAAG,MAAAA,CAAOC,KAAK,EAAEhB,OAAO,EAAEiB,OAAO,KAAK;EACnE,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;IACpDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAEQ,KAAK;MAAEhB;IAAQ,CAAC;EAClD,CAAC,CAAC;EAEF,MAAMkB,MAAM,GAAGjB,GAAG,CAACI,IAAI,CAACc,SAAS,CAAC,CAAC;EACnC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;EACxC,IAAIT,OAAO,GAAG,EAAE;EAEhB,OAAO,IAAI,EAAE;IACX,MAAM;MAAEU,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,MAAM,CAACM,IAAI,CAAC,CAAC;IAC3C,IAAIF,IAAI,EAAE;IACV,MAAMG,KAAK,GAAGL,OAAO,CAACM,MAAM,CAACH,KAAK,CAAC;IACnCX,OAAO,IAAIa,KAAK;IAChBR,OAAO,CAACL,OAAO,CAAC,CAAC,CAAE;EACrB;EAEA,OAAO;IAAED,IAAI,EAAE,WAAW;IAAEC;EAAQ,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}